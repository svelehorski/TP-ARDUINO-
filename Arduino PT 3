
#define B 13
#define A 12
#define F 11
#define G 10
#define E 9
#define D 8
#define C 7

//defino los botones
#define BOTON_A 4
#define BOTON_C 2
#define INTERRUPTOR_DESLIZANTE 3
#define DESLIZANTE_TMP A3

int contador = 0;
int primos = 0;
int valorLuz = analogRead(A2);

//Conecciones y configuracion entrada y salida
void setup() {
  pinMode(13,OUTPUT);
  pinMode(12,OUTPUT);
  pinMode(11,OUTPUT);
  pinMode(10,OUTPUT);
  pinMode(9,OUTPUT);
  pinMode(8,OUTPUT);
  pinMode(7,OUTPUT);
  pinMode(A0, OUTPUT);
  pinMode(A1, OUTPUT);
  
  pinMode(BOTON_A, INPUT_PULLUP);
  pinMode(BOTON_C, INPUT_PULLUP);
  pinMode(INTERRUPTOR_DESLIZANTE, INPUT);
  pinMode(DESLIZANTE_TMP, INPUT);
  pinMode(A2, INPUT);
}
//Funcionalidad en bucle de botones
void loop() {
  if (digitalRead(DESLIZANTE_TMP)== HIGH){
   if (digitalRead(INTERRUPTOR_DESLIZANTE)== 1) {
     elegir_display(primos);}
   if (digitalRead(INTERRUPTOR_DESLIZANTE) == 0){
     elegir_display(contador);}
   
      if ((digitalRead(BOTON_A) == LOW) && contador < 99){
        contador++;
        primos = cambiarPrimos(primos);
        delay(100);} 
      else if (digitalRead(BOTON_C) == LOW) {
        contador = 0;
        delay(60);}
  }else if (digitalRead(DESLIZANTE_TMP) == LOW){
  	int temperatura = medirTemperatura();
    elegir_display(temperatura);
    
  	}
  }


void encender_luces(int a, int b, int c, int d, int e, int f, int g) {
  digitalWrite(13, b);
  digitalWrite(12, a);
  digitalWrite(11, f);
  digitalWrite(10, g);
  digitalWrite(9, e);
  digitalWrite(8, d);
  digitalWrite(7, c); 
}

//Establece un orden de prendido y apagado
void eleccion_numero(int numero) {
  switch(numero){
    case 0:
//le paso como parametro actual un bool que va a ser True o False dependiendo de lo que necesite prender o apagar
      encender_luces(1, 1, 1, 1, 1, 1, 0);
      break;
    case 1:
      encender_luces(0, 1, 1, 0, 0, 0, 0);
      break;
    case 2:
      encender_luces(1, 1, 0, 1, 1, 0, 1);
      break;
    case 3:
      encender_luces(1, 1, 1, 1, 0, 0, 1);
      break;
    case 4:
      encender_luces(0, 1, 1, 0, 0, 1, 1);
      break;
    case 5:
      encender_luces(1, 0, 1, 1, 0, 1, 1);
      break;
    case 6:
      encender_luces(1, 0, 1, 1, 1, 1, 1);
      break;
    case 7:
      encender_luces(1, 1, 1, 0, 0, 0, 0);
      break;
    case 8:
      encender_luces(1, 1, 1, 1, 1, 1, 1);
      break;
    case 9:
      encender_luces(1, 1, 1, 1, 0, 1, 1);
      break;
  }
}

//esta funcion separa unidades y las decenas del contador y las muestra en los display
void elegir_display(int contador)
{
  int unidad = contador % 10;
  digitalWrite(A1, LOW);
  eleccion_numero(unidad);
  delay(50);
  digitalWrite(A1, HIGH);
  int decena = contador/10;
  digitalWrite(A0, LOW);
  eleccion_numero(decena);
  delay(50);
  digitalWrite(A0, HIGH);
}

bool esPrimo(int numero) {
  if (numero <= 1) {
    return true;}
  for (int divisor = 2; divisor < numero; divisor++) {
    if (numero % divisor == 0) {
      return false;}}
  return true;
}

int cambiarPrimos(int contador){
  contador ++;
  
  while (!(esPrimo(contador))){
    contador ++;}
  return contador;
}
//Sensa la temperatura atravez del TMP 36, atravez de una cuenta
int medirTemperatura() {
  
  int lectura = analogRead(5);
  					//algo
  int temperatura = (lectura * (500.0 / 1023.0)) - 50.0;
  Serial.print("La temperatura es: ");
  Serial.println(temperatura);
 	
	 
  delay(10); 
  if (temperatura >0 || temperatura>99){
  	return temperatura;}
  
}

if (valorLuz < 512) {
  // Luz baja, muestra la temperatura
  int temperatura = medirTemperatura();
  elegir_display(temperatura);
	} else {
  // Luz alta, muestra el contador o el contador de nÃºmeros primos
  if (digitalRead(DESLIZANTE_TMP) == HIGH) {
    if (digitalRead(INTERRUPTOR_DESLIZANTE) == 1) {
      elegir_display(primos);
    }
    if (digitalRead(INTERRUPTOR_DESLIZANTE) == 0) {
      elegir_display(contador);
    }
  } else {
    int temperatura = medirTemperatura();
    elegir_display(temperatura);
  }
}
  
